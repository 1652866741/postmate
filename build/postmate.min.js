/**
 * postmate - A powerful, simple, promise-based postMessage library
 * @version v1.0.5
 * @link https://github.com/dollarshaveclub/postmate
 * @author Jacob Kelley <jakie8@gmail.com>
 * @license MIT */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Postmate=t()}(this,function(){"use strict";function e(){return++l}function t(){var e;c.debug&&(e=console).log.apply(e,arguments)}function n(e){var t=document.createElement("a");return t.href=e,t.origin}function i(e,t){return e.origin===t&&("object"===r(e.data)&&("postmate"in e.data&&(e.data.type===d&&!!{"handshake-reply":1,call:1,emit:1,reply:1,request:1}[e.data.postmate])))}function a(e,t){var n="function"==typeof e[t]?e[t]():e[t];return c.Promise.resolve(n)}var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},o=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),d="application/x-postmate-v1+json",l=0,h=function(){function n(e){var i=this;o(this,n),this.parent=e.parent,this.frame=e.frame,this.child=e.child,this.childOrigin=e.childOrigin,this.events={},t("Parent: Registering API"),t("Parent: Awaiting messages..."),this.listener=function(e){var n=((e||{}).data||{}).value||{},a=n.data,r=n.name;"emit"===e.data.postmate&&(t("Parent: Received event emission: "+r),r in i.events&&i.events[r].call(i,a))},this.parent.addEventListener("message",this.listener,!1),t("Parent: Awaiting event emissions from Child")}return s(n,[{key:"get",value:function(t){var n=this;return new c.Promise(function(i){var a=e(),r=function e(t){t.data.uid===a&&"reply"===t.data.postmate&&(n.parent.removeEventListener("message",e,!1),i(t.data.value))};n.parent.addEventListener("message",r,!1),n.child.postMessage({postmate:"request",type:d,property:t,uid:a},n.childOrigin)})}},{key:"call",value:function(e,t){this.child.postMessage({postmate:"call",type:d,property:e,data:t},this.childOrigin)}},{key:"on",value:function(e,t){this.events[e]=t}},{key:"destroy",value:function(){t("Parent: Destroying Postmate instance"),window.removeEventListener("message",this.listener,!1),this.frame.parentNode.removeChild(this.frame)}}]),n}(),u=function(){function e(n){var r=this;o(this,e),this.model=n.model,this.parent=n.parent,this.parentOrigin=n.parentOrigin,this.child=n.child,t("Child: Registering API"),t("Child: Awaiting messages..."),this.child.addEventListener("message",function(e){if(i(e,r.parentOrigin)){t("Child: Received request",e.data);var n=e.data,o=n.property,s=n.uid,l=n.data;return"call"===e.data.postmate?void(o in r.model&&"function"==typeof r.model[o]&&r.model[o].call(r,l)):void a(r.model,o).then(function(t){return e.source.postMessage({property:o,postmate:"reply",type:d,uid:s,value:t},e.origin)})}})}return s(e,[{key:"emit",value:function(e,n){t('Child: Emitting Event "'+e+'"',n),this.parent.postMessage({postmate:"emit",type:d,value:{name:e,data:n}},this.parentOrigin)}}]),e}(),c=function(){function e(t){o(this,e);var n=t.container,i=t.url,a=t.model;return this.parent=window,this.frame=document.createElement("iframe"),(n||document.body).appendChild(this.frame),this.child=this.frame.contentWindow,this.model=a||{},this.sendHandshake(i)}return s(e,[{key:"sendHandshake",value:function(a){var r=this,o=n(a);return new e.Promise(function(e,n){var s=function a(s){return!!i(s,o)&&("handshake-reply"===s.data.postmate?(t("Parent: Received handshake reply from Child"),r.parent.removeEventListener("message",a,!1),r.childOrigin=s.origin,t("Parent: Saving Child origin",r.childOrigin),e(new h(r))):(t("Parent: Invalid handshake reply"),n("Failed handshake")))};r.parent.addEventListener("message",s,!1),r.frame.onload=function(){t("Parent: Sending handshake"),r.child.postMessage({postmate:"handshake",type:d,model:r.model},o)},t("Parent: Loading frame"),r.frame.src=a})}}]),e}();return c.debug=!1,c.Promise=window?window.Promise:Promise,c.Model=function(){function e(t){return o(this,e),this.child=window,this.model=t,this.parent=this.child.parent,this.sendHandshakeReply()}return s(e,[{key:"sendHandshakeReply",value:function(){var e=this;return new c.Promise(function(n,i){var a=function a(r){if("handshake"===r.data.postmate){t("Child: Received handshake from Parent"),e.child.removeEventListener("message",a,!1),t("Child: Sending handshake reply to Parent"),r.source.postMessage({postmate:"handshake-reply",type:d},r.origin),e.parentOrigin=r.origin;var o=r.data.model;if(o){for(var s=Object.keys(o),l=0;l<s.length;l++)o.hasOwnProperty(s[l])&&(e.model[s[l]]=o[s[l]]);t("Child: Inherited and extended model from Parent")}return t("Child: Saving Parent origin",e.parentOrigin),n(new u(e))}return i("Handshake Reply Failed")};e.child.addEventListener("message",a,!1)})}}]),e}(),c});